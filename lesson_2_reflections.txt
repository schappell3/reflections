What happens when you initialize a repository? Why do you need to do it?
A .git directory is created in the location of the repository.  The .git directory stores the files necessary to keep track and commits and other git funtions.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is a necessary step before creating a new commit that allows the user to select files for the commit.  This helps the user make the commit as logical as possible.

How can you use the staging area to make sure you have one commit per logical change?
The staging area allows you to add specific files to be committed.  This gives the user the power to add only the files deemed necessary for a particular logical change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you are trying to add a new feature to an existing program.  Anyone working on that feature will know to use that branch and it can be merged when the feature is complete.

How do the diagrams help you visualize the branch structure?
It helps you see which commits are connected to each other. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches turns the branches into a single branch.  The branches are drawn in the diagram to show the different commits from each branch before the merge happens.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pros
Automatic merging saves the user lots of time for the conflict free merges.
Cons
Automatic merging can create conflicts and bugs depending on the code.
